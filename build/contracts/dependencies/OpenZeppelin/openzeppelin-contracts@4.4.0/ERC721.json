{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/ERC721.sol",
    "2": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721.sol",
    "3": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
    "4": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "5": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
    "6": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "7": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol",
    "8": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
    "9": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1558
      ],
      "Context": [
        1100
      ],
      "ERC165": [
        1785
      ],
      "ERC721": [
        1078
      ],
      "IERC165": [
        1797
      ],
      "IERC721": [
        1216
      ],
      "IERC721Metadata": [
        1261
      ],
      "IERC721Receiver": [
        1234
      ],
      "Strings": [
        1761
      ]
    },
    "id": 1079,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 249,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:1"
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1217,
        "src": "117:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 251,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1235,
        "src": "141:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 252,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1262,
        "src": "173:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1559,
        "src": "216:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1101,
        "src": "250:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1762,
        "src": "284:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 256,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1079,
        "sourceUnit": 1786,
        "src": "318:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 258,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1100,
              "src": "632:7:1"
            },
            "id": 259,
            "nodeType": "InheritanceSpecifier",
            "src": "632:7:1"
          },
          {
            "baseName": {
              "id": 260,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1785,
              "src": "641:6:1"
            },
            "id": 261,
            "nodeType": "InheritanceSpecifier",
            "src": "641:6:1"
          },
          {
            "baseName": {
              "id": 262,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1216,
              "src": "649:7:1"
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "649:7:1"
          },
          {
            "baseName": {
              "id": 264,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1261,
              "src": "658:15:1"
            },
            "id": 265,
            "nodeType": "InheritanceSpecifier",
            "src": "658:15:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 257,
          "nodeType": "StructuredDocumentation",
          "src": "366:246:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1078,
        "linearizedBaseContracts": [
          1078,
          1261,
          1216,
          1785,
          1797,
          1100
        ],
        "name": "ERC721",
        "nameLocation": "622:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 268,
            "libraryName": {
              "id": 266,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1558,
              "src": "686:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "680:26:1",
            "typeName": {
              "id": 267,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "698:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 271,
            "libraryName": {
              "id": 269,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1761,
              "src": "717:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "711:26:1",
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 273,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "776:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "761:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "761:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 275,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "823:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "808:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 274,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "808:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 279,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "919:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "883:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 278,
              "keyType": {
                "id": 276,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "883:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 277,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "902:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 283,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1013:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "977:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 282,
              "keyType": {
                "id": 280,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 281,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 287,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1114:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "1078:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 286,
              "keyType": {
                "id": 284,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1078:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 285,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1097:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 293,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1237:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 1078,
            "src": "1184:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 292,
              "keyType": {
                "id": 288,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1192:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1184:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 291,
                "keyType": {
                  "id": 289,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1211:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1203:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 290,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1222:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "1431:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1441:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 302,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1449:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1441:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:13:1"
                },
                {
                  "expression": {
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 305,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1464:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 306,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "1474:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:17:1"
                }
              ]
            },
            "documentation": {
              "id": 294,
              "nodeType": "StructuredDocumentation",
              "src": "1262:108:1",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 310,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1401:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "1387:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1422:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "1408:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:44:1"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:1"
            },
            "scope": 1078,
            "src": "1375:113:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1784,
              1796
            ],
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "1663:192:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 321,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "1692:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 323,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "1712:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1216_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1216_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 322,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1707:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1707:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1216",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1707:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1692:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 327,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "1748:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 329,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1261,
                                "src": "1768:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1261_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1261_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 328,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1763:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1763:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1261",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1763:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1748:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1692:104:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 336,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "1836:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 334,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1812:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1078_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1784,
                        "src": "1812:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1812:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1692:156:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 320,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "1673:175:1"
                }
              ]
            },
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "1494:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1564:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 317,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 315,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1785,
                  "src": "1631:6:1"
                },
                {
                  "id": 316,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1797,
                  "src": "1639:7:1"
                }
              ],
              "src": "1622:25:1"
            },
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1589:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "1582:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:20:1"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "1657:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:6:1"
            },
            "scope": 1078,
            "src": "1555:300:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1141
            ],
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "1995:124:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 351,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2013:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2022:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2022:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2013:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2005:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:74:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 360,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2096:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 362,
                    "indexExpression": {
                      "id": 361,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2106:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2096:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 349,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "2089:23:1"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "1861:48:1",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1923:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 346,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1968:8:1"
            },
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1941:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "1933:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:15:1"
            },
            "returnParameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "1986:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:9:1"
            },
            "scope": 1078,
            "src": "1914:205:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1149
            ],
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "2257:154:1",
              "statements": [
                {
                  "assignments": [
                    375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 375,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2275:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2267:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2267:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "baseExpression": {
                      "id": 376,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2283:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 378,
                    "indexExpression": {
                      "id": 377,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2291:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2283:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2267:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 381,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "2317:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2334:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2326:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 382,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2326:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2317:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2338:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2309:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:73:1"
                },
                {
                  "expression": {
                    "id": 390,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "2399:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 373,
                  "id": 391,
                  "nodeType": "Return",
                  "src": "2392:12:1"
                }
              ]
            },
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "2125:46:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2185:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 370,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2230:8:1"
            },
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2201:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "2193:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2192:17:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "2248:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:1"
            },
            "scope": 1078,
            "src": "2176:235:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1246
            ],
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "2542:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 400,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 273,
                    "src": "2559:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 399,
                  "id": 401,
                  "nodeType": "Return",
                  "src": "2552:12:1"
                }
              ]
            },
            "documentation": {
              "id": 394,
              "nodeType": "StructuredDocumentation",
              "src": "2417:51:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2482:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 396,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2509:8:1"
            },
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2486:2:1"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "2527:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:15:1"
            },
            "scope": 1078,
            "src": "2473:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1252
            ],
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "2706:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 410,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 275,
                    "src": "2723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "2716:14:1"
                }
              ]
            },
            "documentation": {
              "id": 404,
              "nodeType": "StructuredDocumentation",
              "src": "2577:53:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2644:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2673:8:1"
            },
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:2:1"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "2691:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:15:1"
            },
            "scope": 1078,
            "src": "2635:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1260
            ],
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "2891:241:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 424,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2917:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 423,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "2909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2909:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2927:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:76:1"
                },
                {
                  "assignments": [
                    430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3002:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "2988:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2988:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 431,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "3012:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 436,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3045:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3039:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 434,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3039:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3039:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3039:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3063:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3039:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3123:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3039:86:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 445,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3091:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 446,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "3100:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1643,
                                "src": "3100:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3100:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 443,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3074:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3074:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3074:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3067:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3067:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:53:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 421,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "3032:93:1"
                }
              ]
            },
            "documentation": {
              "id": 414,
              "nodeType": "StructuredDocumentation",
              "src": "2743:55:1",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2812:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 418,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2858:8:1"
            },
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2829:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "2821:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:17:1"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "2876:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:15:1"
            },
            "scope": 1078,
            "src": "2803:329:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "3439:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3456:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 460,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "3449:9:1"
                }
              ]
            },
            "documentation": {
              "id": 456,
              "nodeType": "StructuredDocumentation",
              "src": "3138:230:1",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3382:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:2:1"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "3424:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:15:1"
            },
            "scope": 1078,
            "src": "3373:92:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1177
            ],
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "3592:331:1",
              "statements": [
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3610:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "3602:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3602:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 477,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "3633:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 475,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "3618:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1078_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "3618:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 481,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "3659:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 482,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "3665:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3659:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3672:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3651:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 488,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "3740:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3740:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 490,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "3756:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3740:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 493,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3782:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 494,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1090,
                                "src": "3789:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3789:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 492,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "3765:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3765:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3740:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3719:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:165:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:165:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 502,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "3904:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 503,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "3908:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 501,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "3895:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:21:1"
                }
              ]
            },
            "documentation": {
              "id": 465,
              "nodeType": "StructuredDocumentation",
              "src": "3471:46:1",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3531:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 471,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3583:8:1"
            },
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3547:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "3539:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3559:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "3551:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:29:1"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3592:0:1"
            },
            "scope": 1078,
            "src": "3522:401:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1185
            ],
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "4069:132:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 518,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4095:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 517,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "4087:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4079:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:73:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 523,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "4170:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 525,
                    "indexExpression": {
                      "id": 524,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "4186:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4170:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 515,
                  "id": 526,
                  "nodeType": "Return",
                  "src": "4163:31:1"
                }
              ]
            },
            "documentation": {
              "id": 508,
              "nodeType": "StructuredDocumentation",
              "src": "3929:50:1",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3993:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 512,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4042:8:1"
            },
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4013:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "4005:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4004:17:1"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "4060:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4060:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4059:9:1"
            },
            "scope": 1078,
            "src": "3984:217:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1193
            ],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "4352:69:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 538,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "4381:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4381:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 540,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "4395:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 541,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4405:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 537,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "4362:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4362:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "4362:52:1"
                }
              ]
            },
            "documentation": {
              "id": 529,
              "nodeType": "StructuredDocumentation",
              "src": "4207:56:1",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4277:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 535,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4343:8:1"
            },
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4303:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "4295:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4318:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "4313:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:33:1"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4352:0:1"
            },
            "scope": 1078,
            "src": "4268:153:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1203
            ],
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "4590:59:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 556,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "4607:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 558,
                      "indexExpression": {
                        "id": 557,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "4626:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4607:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 560,
                    "indexExpression": {
                      "id": 559,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "4633:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4607:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 561,
                  "nodeType": "Return",
                  "src": "4600:42:1"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "4427:55:1",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4496:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4566:8:1"
            },
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4521:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "4513:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4536:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "4528:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:33:1"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "4584:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4584:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4583:6:1"
            },
            "scope": 1078,
            "src": "4487:162:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1169
            ],
            "body": {
              "id": 589,
              "nodeType": "Block",
              "src": "4830:211:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 576,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "4919:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4919:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 578,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "4933:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 575,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "4900:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4900:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4943:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4892:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4892:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "4892:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "5016:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 585,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "5022:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 586,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "5026:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 583,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "5006:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:28:1"
                }
              ]
            },
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "4655:51:1",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4720:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 572,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4821:8:1"
            },
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4750:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "4742:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4772:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "4764:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4792:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "4784:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4732:73:1"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:1"
            },
            "scope": 1078,
            "src": "4711:330:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1159
            ],
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "5230:56:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 602,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "5257:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 603,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "5263:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 604,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "5267:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5276:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 601,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        609,
                        639
                      ],
                      "referencedDeclaration": 639,
                      "src": "5240:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5240:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "5240:39:1"
                }
              ]
            },
            "documentation": {
              "id": 591,
              "nodeType": "StructuredDocumentation",
              "src": "5047:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5116:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 599,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5221:8:1"
            },
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5150:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5142:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5172:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5164:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5192:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5184:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5132:73:1"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5230:0:1"
            },
            "scope": 1078,
            "src": "5107:179:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1215
            ],
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "5503:169:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 624,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "5540:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5540:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 626,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "5554:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 623,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "5521:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5521:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5564:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5513:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 632,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "5640:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 633,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "5646:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 634,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "5650:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 635,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "5659:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 631,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "5626:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:39:1"
                }
              ]
            },
            "documentation": {
              "id": 610,
              "nodeType": "StructuredDocumentation",
              "src": "5292:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5361:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 620,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5494:8:1"
            },
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5395:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "5387:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5417:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "5409:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5409:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5437:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "5429:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5429:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5467:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "5454:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5377:101:1"
            },
            "returnParameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5503:0:1"
            },
            "scope": 1078,
            "src": "5352:320:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "6675:166:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 652,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "6695:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 653,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "6701:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "6705:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 651,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "6685:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6685:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "6685:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 659,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "6754:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 660,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "6760:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 661,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "6764:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 662,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "6773:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 658,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "6731:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:48:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6781:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6723:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:111:1"
                }
              ]
            },
            "documentation": {
              "id": 640,
              "nodeType": "StructuredDocumentation",
              "src": "5678:851:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6543:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6574:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "6566:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6566:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6596:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "6588:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6588:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6616:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "6608:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6608:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6646:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "6633:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6556:101:1"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6675:0:1"
            },
            "scope": 1078,
            "src": "6534:307:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "7215:54:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 676,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7232:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 678,
                      "indexExpression": {
                        "id": 677,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "7240:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7232:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7260:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7252:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7252:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7252:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7232:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "7225:37:1"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "6847:292:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7153:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7169:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7161:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7160:17:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7209:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7208:6:1"
            },
            "scope": 1078,
            "src": "7144:125:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "7526:245:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 698,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 691,
                            "src": "7552:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 697,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "7544:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7544:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7536:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:73:1"
                },
                {
                  "assignments": [
                    704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7627:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "7619:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7619:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 707,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7650:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 705,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "7635:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1078_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "7635:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7635:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7619:39:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 710,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "7676:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 711,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "7687:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7676:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 714,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 691,
                                  "src": "7708:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 713,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "7696:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7696:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 716,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "7720:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7696:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7676:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 720,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "7748:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 721,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "7755:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 719,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "7731:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7731:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7676:87:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 724,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7675:89:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 695,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "7668:96:1"
                }
              ]
            },
            "documentation": {
              "id": 687,
              "nodeType": "StructuredDocumentation",
              "src": "7275:147:1",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7436:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7463:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7455:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7480:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7472:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7472:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7454:34:1"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7520:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7519:6:1"
            },
            "scope": 1078,
            "src": "7427:344:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "8166:43:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8186:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 737,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "8190:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8199:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 735,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        742,
                        771
                      ],
                      "referencedDeclaration": 771,
                      "src": "8176:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:26:1"
                }
              ]
            },
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "7777:319:1",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8110:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8128:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8120:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8140:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8132:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8132:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8119:29:1"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8166:0:1"
            },
            "scope": 1078,
            "src": "8101:108:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "8545:196:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 753,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "8561:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 754,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "8565:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 752,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "8555:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8555:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8555:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8635:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8627:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 759,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8627:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8627:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 763,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "8639:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 764,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "8643:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 765,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "8652:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 758,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "8604:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8604:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8672:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8583:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8583:151:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "8583:151:1"
                }
              ]
            },
            "documentation": {
              "id": 743,
              "nodeType": "StructuredDocumentation",
              "src": "8215:210:1",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8439:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8466:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8458:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8458:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8486:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8478:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8516:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "8503:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:79:1"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8545:0:1"
            },
            "scope": 1078,
            "src": "8430:311:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "9124:311:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 780,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "9142:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9156:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9148:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 781,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9148:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9148:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9142:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9160:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9134:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9213:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 791,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "9222:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 790,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "9214:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9214:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9232:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9205:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9205:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9303:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9295:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 798,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9295:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9295:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 802,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9307:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "9311:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 797,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "9274:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9274:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "9274:45:1"
                },
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 806,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "9330:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 808,
                      "indexExpression": {
                        "id": 807,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9340:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9330:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9347:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9330:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:18:1"
                },
                {
                  "expression": {
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 812,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "9358:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 814,
                      "indexExpression": {
                        "id": 813,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "9366:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9358:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 815,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "9377:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9358:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 817,
                  "nodeType": "ExpressionStatement",
                  "src": "9358:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9412:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9404:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9404:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9404:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9416:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 824,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "9420:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 818,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "9395:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9395:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "EmitStatement",
                  "src": "9390:38:1"
                }
              ]
            },
            "documentation": {
              "id": 772,
              "nodeType": "StructuredDocumentation",
              "src": "8747:311:1",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9072:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9086:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "9078:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9098:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "9090:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9077:29:1"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9124:0:1"
            },
            "scope": 1078,
            "src": "9063:372:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 878,
              "nodeType": "Block",
              "src": "9701:299:1",
              "statements": [
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9719:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 878,
                      "src": "9711:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 834,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9711:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 840,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 838,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "9742:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 836,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "9727:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1078_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "9727:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9727:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9711:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "9782:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9797:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9789:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 843,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9789:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9789:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 847,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "9801:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "9761:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9761:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "9761:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9864:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9856:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 851,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9856:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9856:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 855,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "9868:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 850,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "9847:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9847:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "9847:29:1"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 858,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "9887:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 860,
                      "indexExpression": {
                        "id": 859,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "9897:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9887:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9907:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9887:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "9887:21:1"
                },
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9918:23:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 864,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "9925:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 866,
                      "indexExpression": {
                        "id": 865,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "9933:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9925:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 870,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "9966:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9981:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9973:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 871,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9973:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9973:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 875,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "9985:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 869,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "9957:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9957:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "EmitStatement",
                  "src": "9952:41:1"
                }
              ]
            },
            "documentation": {
              "id": 829,
              "nodeType": "StructuredDocumentation",
              "src": "9441:206:1",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9661:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9675:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "9667:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9667:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9666:17:1"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9701:0:1"
            },
            "scope": 1078,
            "src": "9652:348:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "10433:451:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 892,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 886,
                              "src": "10466:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 890,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "10451:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1078_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 393,
                            "src": "10451:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10451:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 894,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "10478:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10451:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10484:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10443:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10443:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "10443:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 900,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 884,
                          "src": "10546:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10560:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10552:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 901,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10552:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10552:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10546:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10564:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10538:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10538:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "10538:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 910,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "10635:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 911,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "10641:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "10645:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 909,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "10614:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10614:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "10614:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10732:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10724:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 916,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10724:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10724:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 920,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "10736:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 915,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "10715:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10715:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "10715:29:1"
                },
                {
                  "expression": {
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 923,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "10755:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 925,
                      "indexExpression": {
                        "id": 924,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "10765:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10755:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10774:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10755:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "10755:20:1"
                },
                {
                  "expression": {
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 929,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "10785:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 931,
                      "indexExpression": {
                        "id": 930,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "10795:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10785:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10802:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10785:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "10785:18:1"
                },
                {
                  "expression": {
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 935,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "10813:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 937,
                      "indexExpression": {
                        "id": 936,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "10821:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10813:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 938,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "10832:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10813:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "10813:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 942,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "10859:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 943,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "10865:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 944,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "10869:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 941,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "10850:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10850:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "EmitStatement",
                  "src": "10845:32:1"
                }
              ]
            },
            "documentation": {
              "id": 880,
              "nodeType": "StructuredDocumentation",
              "src": "10006:313:1",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10333:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10360:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "10352:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10382:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "10374:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10374:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10402:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "10394:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10394:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10342:73:1"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10433:0:1"
            },
            "scope": 1078,
            "src": "10324:560:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 971,
              "nodeType": "Block",
              "src": "11059:107:1",
              "statements": [
                {
                  "expression": {
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 956,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "11069:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 958,
                      "indexExpression": {
                        "id": 957,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "11085:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11069:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 959,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "11096:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11069:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "11069:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 965,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "11137:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 963,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "11122:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1078_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 393,
                          "src": "11122:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11122:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 967,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "11147:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 968,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "11151:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 962,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "11113:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11113:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "EmitStatement",
                  "src": "11108:51:1"
                }
              ]
            },
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "10890:100:1",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11004:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11021:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11013:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11013:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11033:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11025:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11025:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11012:29:1"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11059:0:1"
            },
            "scope": 1078,
            "src": "10995:171:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1003,
              "nodeType": "Block",
              "src": "11424:184:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 983,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "11442:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 984,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "11451:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11442:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11461:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11434:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11434:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "11434:55:1"
                },
                {
                  "expression": {
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 989,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "11499:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 992,
                        "indexExpression": {
                          "id": 990,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "11518:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11499:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 993,
                      "indexExpression": {
                        "id": 991,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "11525:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11499:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 994,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "11537:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11499:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "11499:46:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 998,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "11575:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 999,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "11582:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1000,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "11592:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 997,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
                      "src": "11560:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11560:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "EmitStatement",
                  "src": "11555:46:1"
                }
              ]
            },
            "documentation": {
              "id": 973,
              "nodeType": "StructuredDocumentation",
              "src": "11172:124:1",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 1004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11310:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11346:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11338:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11338:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11369:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11361:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11361:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11392:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "11387:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11387:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11328:78:1"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11424:0:1"
            },
            "scope": 1078,
            "src": "11301:307:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1065,
              "nodeType": "Block",
              "src": "12317:622:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1018,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "12331:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1281,
                      "src": "12331:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12331:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1063,
                    "nodeType": "Block",
                    "src": "12897:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12918:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1017,
                        "id": 1062,
                        "nodeType": "Return",
                        "src": "12911:11:1"
                      }
                    ]
                  },
                  "id": 1064,
                  "nodeType": "IfStatement",
                  "src": "12327:606:1",
                  "trueBody": {
                    "id": 1060,
                    "nodeType": "Block",
                    "src": "12348:543:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1040,
                              "nodeType": "Block",
                              "src": "12463:91:1",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1038,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1034,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1032,
                                      "src": "12488:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1035,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1234,
                                          "src": "12498:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1234_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1036,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1233,
                                        "src": "12498:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12498:41:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12488:51:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1017,
                                  "id": 1039,
                                  "nodeType": "Return",
                                  "src": "12481:58:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1041,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1033,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1032,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12455:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1041,
                                  "src": "12448:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1031,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12448:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12447:15:1"
                            },
                            "src": "12439:115:1"
                          },
                          {
                            "block": {
                              "id": 1057,
                              "nodeType": "Block",
                              "src": "12583:298:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1048,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1045,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1043,
                                        "src": "12605:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1046,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12605:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1047,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12622:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12605:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1055,
                                    "nodeType": "Block",
                                    "src": "12732:135:1",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12763:86:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12800:2:1",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12804:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12796:3:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12796:15:1"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12819:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12813:5:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12813:13:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12789:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12789:38:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12789:38:1"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1043,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12804:6:1",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1043,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12819:6:1",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1054,
                                        "nodeType": "InlineAssembly",
                                        "src": "12754:95:1"
                                      }
                                    ]
                                  },
                                  "id": 1056,
                                  "nodeType": "IfStatement",
                                  "src": "12601:266:1",
                                  "trueBody": {
                                    "id": 1053,
                                    "nodeType": "Block",
                                    "src": "12625:101:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1050,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12654:52:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1049,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12647:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1051,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12647:60:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1052,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12647:60:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1058,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1044,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1043,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12575:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1058,
                                  "src": "12562:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1042,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12562:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12561:21:1"
                            },
                            "src": "12555:326:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1025,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1090,
                                "src": "12403:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12403:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1027,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "12417:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1028,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "12423:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1029,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "12432:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1022,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "12382:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1021,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "12366:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1234_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12366:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1234",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1233,
                            "src": "12366:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12366:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1059,
                        "nodeType": "TryStatement",
                        "src": "12362:519:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1005,
              "nodeType": "StructuredDocumentation",
              "src": "11614:542:1",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12170:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12210:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "12202:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12202:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12232:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "12224:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12252:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "12244:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12244:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12282:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "12269:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12192:101:1"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "12311:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12311:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12310:6:1"
            },
            "scope": 1078,
            "src": "12161:778:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1076,
              "nodeType": "Block",
              "src": "13615:2:1",
              "statements": []
            },
            "documentation": {
              "id": 1067,
              "nodeType": "StructuredDocumentation",
              "src": "12945:545:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13504:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13542:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "13534:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13534:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13564:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "13556:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13556:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13584:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "13576:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13576:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13524:73:1"
            },
            "returnParameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13615:0:1"
            },
            "scope": 1078,
            "src": "13495:122:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1079,
        "src": "613:13006:1",
        "usedErrors": []
      }
    ],
    "src": "92:13528:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014f1380380620014f18339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61125f80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610f3e565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190611029565b61012461011f366004610f78565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610f14565b6103a6565b005b61014f61015f366004610dc0565b6104bc565b61014f610172366004610dc0565b6104ed565b610124610185366004610f78565b610508565b61019d610198366004610d72565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610ed8565b610615565b61014f6101d4366004610dfc565b610624565b6101046101e7366004610f78565b61065c565b6100e76101fa366004610d8d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102899061114e565b80601f01602080910402602001604051908101604052809291908181526020018280546102b59061114e565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b81526004016103819061108e565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b6060600180546102899061114e565b610620338383610a49565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b81526004016103819061108e565b61065684848484610b18565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b4b565b60405160200161072d929190610fbd565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610991600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109ba90849061110b565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e89084906110df565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b238484846108a9565b610b2f84848484610c49565b6106565760405162461bcd60e51b81526004016103819061103c565b606081610b6f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b995780610b8381611189565b9150610b929050600a836110f7565b9150610b73565b60008167ffffffffffffffff811115610bb457610bb46111fa565b6040519080825280601f01601f191660200182016040528015610bde576020820181803683370190505b5090505b84156108a157610bf360018361110b565b9150610c00600a866111a4565b610c0b9060306110df565b60f81b818381518110610c2057610c206111e4565b60200101906001600160f81b031916908160001a905350610c42600a866110f7565b9450610be2565b60006001600160a01b0384163b15610d4b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8d903390899088908890600401610fec565b602060405180830381600087803b158015610ca757600080fd5b505af1925050508015610cd7575060408051601f3d908101601f19168201909252610cd491810190610f5b565b60015b610d31573d808015610d05576040519150601f19603f3d011682016040523d82523d6000602084013e610d0a565b606091505b508051610d295760405162461bcd60e51b81526004016103819061103c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b80356001600160a01b0381168114610d6d57600080fd5b919050565b600060208284031215610d8457600080fd5b61073d82610d56565b60008060408385031215610da057600080fd5b610da983610d56565b9150610db760208401610d56565b90509250929050565b600080600060608486031215610dd557600080fd5b610dde84610d56565b9250610dec60208501610d56565b9150604084013590509250925092565b60008060008060808587031215610e1257600080fd5b610e1b85610d56565b9350610e2960208601610d56565b925060408501359150606085013567ffffffffffffffff80821115610e4d57600080fd5b818701915087601f830112610e6157600080fd5b813581811115610e7357610e736111fa565b604051601f8201601f19908116603f01168101908382118183101715610e9b57610e9b6111fa565b816040528281528a6020848701011115610eb457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610eeb57600080fd5b610ef483610d56565b915060208301358015158114610f0957600080fd5b809150509250929050565b60008060408385031215610f2757600080fd5b610f3083610d56565b946020939093013593505050565b600060208284031215610f5057600080fd5b813561073d81611210565b600060208284031215610f6d57600080fd5b815161073d81611210565b600060208284031215610f8a57600080fd5b5035919050565b60008151808452610fa9816020860160208601611122565b601f01601f19169290920160200192915050565b60008351610fcf818460208801611122565b835190830190610fe3818360208801611122565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101f90830184610f91565b9695505050505050565b60208152600061073d6020830184610f91565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110f2576110f26111b8565b500190565b600082611106576111066111ce565b500490565b60008282101561111d5761111d6111b8565b500390565b60005b8381101561113d578181015183820152602001611125565b838111156106565750506000910152565b600181811c9082168061116257607f821691505b6020821081141561118357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561119d5761119d6111b8565b5060010190565b6000826111b3576111b36111ce565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461122657600080fd5b5056fea2646970667358221220bf05eac1456b5681ff68d076924bc1f0b725b0f8a9eef26de4f60e1aa2cebe1064736f6c63430008070033",
  "bytecodeSha1": "6766c70b57094d2354e659089b823c8d4950801d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC721._safeTransfer": {
          "61": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "60": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10451,
            10482,
            true
          ],
          "59": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3659,
            3670,
            true
          ],
          "51": [
            3740,
            3761,
            true
          ],
          "52": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            3039,
            3064,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4900,
            4941,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {
        "ERC721._approve": {
          "24": [
            11069,
            11098
          ],
          "25": [
            11108,
            11159
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3449,
            3458
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12647,
            12707
          ],
          "48": [
            12481,
            12539
          ],
          "49": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "4": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7536,
            7609
          ],
          "27": [
            7668,
            7764
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6685,
            6713
          ],
          "39": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11434,
            11489
          ],
          "36": [
            11499,
            11545
          ],
          "37": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "28": [
            10443,
            10528
          ],
          "29": [
            10538,
            10603
          ],
          "30": [
            10715,
            10744
          ],
          "31": [
            10755,
            10775
          ],
          "32": [
            10785,
            10803
          ],
          "33": [
            10813,
            10834
          ],
          "34": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "7": [
            3651,
            3708
          ],
          "9": [
            3719,
            3884
          ],
          "10": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2005,
            2079
          ],
          "16": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4079,
            4152
          ],
          "6": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "3": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5240,
            5279
          ],
          "19": [
            5513,
            5616
          ],
          "20": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "17": [
            2716,
            2730
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2901,
            2977
          ],
          "23": [
            3032,
            3125
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4892,
            4995
          ],
          "12": [
            5006,
            5034
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "46": [
            1126,
            1141
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "7": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "8": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "613:13006:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:11;;5020:22;5002:41;;4990:2;4975:18;1555:300:1;;;;;;;;2473:98;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:11;;;4307:51;;4295:2;4280:18;3984:217:1;4161:203:11;3522:401:1;;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10320:25:11;;;10308:2;10293:18;1914:205:1;10174:177:11;2635:102:1;;;:::i;4268:153::-;;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;:::i;:::-;;:::i;2803:329::-;;;;;;:::i;:::-;;:::i;4487:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:1;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;1555:300;1657:4;-1:-1:-1;;;;;;1692:40:1;;-1:-1:-1;;;1692:40:1;;:104;;-1:-1:-1;;;;;;;1748:48:1;;-1:-1:-1;;;1748:48:1;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1812:36:1;1673:175;1555:300;-1:-1:-1;;1555:300:1:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:1;4079:73;;;;-1:-1:-1;;;4079:73:1;;8317:2:11;4079:73:1;;;8299:21:11;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:11;;;8439:42;8498:19;;4079:73:1;;;;;;;;;-1:-1:-1;4170:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:1;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:1;:2;-1:-1:-1;;;;;3659:11:1;;;3651:57;;;;-1:-1:-1;;;3651:57:1;;9556:2:11;3651:57:1;;;9538:21:11;9595:2;9575:18;;;9568:30;9634:34;9614:18;;;9607:62;-1:-1:-1;;;9685:18:11;;;9678:31;9726:19;;3651:57:1;9354:397:11;3651:57:1;719:10:6;-1:-1:-1;;;;;3740:21:1;;;;:62;;-1:-1:-1;3765:37:1;3782:5;719:10:6;4487:162:1;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:1;;7071:2:11;3719:165:1;;;7053:21:11;7110:2;7090:18;;;7083:30;7149:34;7129:18;;;7122:62;7220:26;7200:18;;;7193:54;7264:19;;3719:165:1;6869:420:11;3719:165:1;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;4711:330::-;4900:41;719:10:6;4933:7:1;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:1;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:1;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:1;;7907:2:11;2309:73:1;;;7889:21:11;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:11;;;8029:39;8085:19;;2309:73:1;7705:405:11;1914:205:1;1986:7;-1:-1:-1;;;;;2013:19:1;;2005:74;;;;-1:-1:-1;;;2005:74:1;;7496:2:11;2005:74:1;;;7478:21:11;7535:2;7515:18;;;7508:30;7574:34;7554:18;;;7547:62;-1:-1:-1;;;7625:18:11;;;7618:40;7675:19;;2005:74:1;7294:406:11;2005:74:1;-1:-1:-1;;;;;;2096:16:1;;;;;:9;:16;;;;;;;1914:205::o;2635:102::-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:6;4395:8:1;4405;4362:18;:52::i;:::-;4268:153;;:::o;5352:320::-;5521:41;719:10:6;5554:7:1;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:1;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;2803:329::-;7209:4;7232:16;;;:7;:16;;;;;;2876:13;;-1:-1:-1;;;;;7232:16:1;2901:76;;;;-1:-1:-1;;;2901:76:1;;9140:2:11;2901:76:1;;;9122:21:11;9179:2;9159:18;;;9152:30;9218:34;9198:18;;;9191:62;-1:-1:-1;;;9269:18:11;;;9262:45;9324:19;;2901:76:1;8938:411:11;2901:76:1;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:1;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:1:o;10995:171::-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:1;-1:-1:-1;;;;;11069:29:1;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:1;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:1;7536:73;;;;-1:-1:-1;;;7536:73:1;;6658:2:11;7536:73:1;;;6640:21:11;6697:2;6677:18;;;6670:30;6736:34;6716:18;;;6709:62;-1:-1:-1;;;6787:18:11;;;6780:42;6839:19;;7536:73:1;6456:408:11;7536:73:1;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:1;:7;-1:-1:-1;;;;;7676:16:1;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:1;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:1;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:1;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:1:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:1;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:1;;10443:85;;;;-1:-1:-1;;;10443:85:1;;8730:2:11;10443:85:1;;;8712:21:11;8769:2;8749:18;;;8742:30;8808:34;8788:18;;;8781:62;-1:-1:-1;;;8859:18:11;;;8852:39;8908:19;;10443:85:1;8528:405:11;10443:85:1;-1:-1:-1;;;;;10546:16:1;;10538:65;;;;-1:-1:-1;;;10538:65:1;;5899:2:11;10538:65:1;;;5881:21:11;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:11;;;6021:34;6072:19;;10538:65:1;5697:400:11;10538:65:1;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:1;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:1;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:1;-1:-1:-1;;;;;10813:21:1;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;11301:307::-;11451:8;-1:-1:-1;;;;;11442:17:1;:5;-1:-1:-1;;;;;11442:17:1;;;11434:55;;;;-1:-1:-1;;;11434:55:1;;6304:2:11;11434:55:1;;;6286:21:11;6343:2;6323:18;;;6316:30;6382:27;6362:18;;;6355:55;6427:18;;11434:55:1;6102:349:11;11434:55:1;-1:-1:-1;;;;;11499:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:1;;;;;;;;;;11560:41;;5002::11;;;11560::1;;4975:18:11;11560:41:1;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:1;;;;;;;:::i;328:703:7:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:7;;;;;;;;;;;;-1:-1:-1;;;627:10:7;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:7;;-1:-1:-1;773:2:7;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:7;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:7;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:7;;;;;;;;-1:-1:-1;972:11:7;981:2;972:11;;:::i;:::-;;;844:150;;12161:778:1;12311:4;-1:-1:-1;;;;;12331:13:1;;1087:20:5;1133:8;12327:606:1;;12366:72;;-1:-1:-1;;;12366:72:1;;-1:-1:-1;;;;;12366:36:1;;;;;:72;;719:10:6;;12417:4:1;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:1;;;;;;;;-1:-1:-1;;12366:72:1;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:1;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:1;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:1;-1:-1:-1;;;12488:51:1;;-1:-1:-1;12481:58:1;;12327:606;-1:-1:-1;12918:4:1;12161:778;;;;;;:::o;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:11;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:11:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:11;;3239:180;-1:-1:-1;3239:180:11:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:11;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:11:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:11:o;4369:488::-;-1:-1:-1;;;;;4638:15:11;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:11:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:11;5609:18;;5602:48;5682:3;5667:19;;5278:414::o;9756:413::-;9958:2;9940:21;;;9997:2;9977:18;;;9970:30;10036:34;10031:2;10016:18;;10009:62;-1:-1:-1;;;10102:2:11;10087:18;;10080:47;10159:3;10144:19;;9756:413::o;10356:128::-;10396:3;10427:1;10423:6;10420:1;10417:13;10414:39;;;10433:18;;:::i;:::-;-1:-1:-1;10469:9:11;;10356:128::o;10489:120::-;10529:1;10555;10545:35;;10560:18;;:::i;:::-;-1:-1:-1;10594:9:11;;10489:120::o;10614:125::-;10654:4;10682:1;10679;10676:8;10673:34;;;10687:18;;:::i;:::-;-1:-1:-1;10724:9:11;;10614:125::o;10744:258::-;10816:1;10826:113;10840:6;10837:1;10834:13;10826:113;;;10916:11;;;10910:18;10897:11;;;10890:39;10862:2;10855:10;10826:113;;;10957:6;10954:1;10951:13;10948:48;;;-1:-1:-1;;10992:1:11;10974:16;;10967:27;10744:258::o;11007:380::-;11086:1;11082:12;;;;11129;;;11150:61;;11204:4;11196:6;11192:17;11182:27;;11150:61;11257:2;11249:6;11246:14;11226:18;11223:38;11220:161;;;11303:10;11298:3;11294:20;11291:1;11284:31;11338:4;11335:1;11328:15;11366:4;11363:1;11356:15;11220:161;;11007:380;;;:::o;11392:135::-;11431:3;-1:-1:-1;;11452:17:11;;11449:43;;;11472:18;;:::i;:::-;-1:-1:-1;11519:1:11;11508:13;;11392:135::o;11532:112::-;11564:1;11590;11580:35;;11595:18;;:::i;:::-;-1:-1:-1;11629:9:11;;11532:112::o;11649:127::-;11710:10;11705:3;11701:20;11698:1;11691:31;11741:4;11738:1;11731:15;11765:4;11762:1;11755:15;11781:127;11842:10;11837:3;11833:20;11830:1;11823:31;11873:4;11870:1;11863:15;11897:4;11894:1;11887:15;11913:127;11974:10;11969:3;11965:20;11962:1;11955:31;12005:4;12002:1;11995:15;12029:4;12026:1;12019:15;12045:127;12106:10;12101:3;12097:20;12094:1;12087:31;12137:4;12134:1;12127:15;12161:4;12158:1;12151:15;12177:131;-1:-1:-1;;;;;;12251:32:11;;12241:43;;12231:71;;12298:1;12295;12288:12;12231:71;12177:131;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    613,
    13619
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 PUSH1 0x20 DUP5 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEC PUSH1 0x20 DUP6 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP6 PUSH2 0xD56 JUMP JUMPDEST SWAP4 POP PUSH2 0xE29 PUSH1 0x20 DUP7 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE73 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x11FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x11B8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1106 JUMPI PUSH2 0x1106 PUSH2 0x11CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x11B8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1162 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x119D PUSH2 0x11B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B3 JUMPI PUSH2 0x11B3 PUSH2 0x11CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV 0xEA 0xC1 GASLIMIT PUSH12 0x5681FF68D076924BC1F0B725 0xB0 0xF8 0xA9 0xEE CALLCODE PUSH14 0xE4F60E1AA2CEBE1064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3E"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "1"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "1"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "1"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1029"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF78"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "1"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF14"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "1"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "1"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC0"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "1"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC0"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF78"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD72"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED8"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDFC"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF78"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65C"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8D"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "1"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "1"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "1"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "1"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "1"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "1"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "1"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "1"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "1"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "8"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "8"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114E"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "1"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "1"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "1"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114E"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "1"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "1"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "1"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "1"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "1"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "1"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "1"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "1"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "1"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "1"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "1"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "1"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "1"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "1"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "1"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "1"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "1"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "1"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "1"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "1"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "1"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "1"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "1"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "1"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "1"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "1"
    },
    "969": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41F"
    },
    "973": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "1"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "1"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "1"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "1"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "1"
    },
    "1068": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43B"
    },
    "1072": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1083": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "1"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x744"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "1"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "1"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "1"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B2"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1222": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "1"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108E"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A9"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "1"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "1"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "1"
    },
    "1313": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "1317": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "1"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1419": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "1"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "1"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "1",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114E"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1558": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 18,
      "value": "0x620"
    },
    "1561": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA49"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "1"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "1"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x62E"
    },
    "1576": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B2"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1582": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "1586": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1587": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1599": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "1"
    },
    "1602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108E"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x656"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB18"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "1"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "1"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "1"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "1"
    },
    "1627": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1629": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1634": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1636": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1639": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1643": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "op": "SUB"
    },
    "1655": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "1"
    },
    "1656": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x6DB"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1660": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "ADD",
      "path": "1"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1721": {
      "op": "DUP3"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1754": {
      "op": "JUMP"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1756": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3009
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F2"
    },
    "1761": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1765": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "ADD",
      "path": "1"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1771": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1777": {
      "fn": "ERC721._baseURI",
      "offset": [
        3373,
        3465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "POP",
      "path": "1"
    },
    "1781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3060
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1785": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3064
      ],
      "op": "GT",
      "path": "1"
    },
    "1786": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x712"
    },
    "1789": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "ADD",
      "path": "1"
    },
    "1797": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "POP",
      "path": "1"
    },
    "1806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73D"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3091,
        3098
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71C"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3107
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4B"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "ADD",
      "path": "1"
    },
    "1827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72D"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFBD"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "1"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "1"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3125
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1861": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1866": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1868": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1871": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1876": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "op": "NOT"
    },
    "1886": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "op": "SUB"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "1"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "1"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1905": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x779"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1909": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "1912": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1913": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "1"
    },
    "1923": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1956": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1959": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "1"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "1"
    },
    "1968": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "1"
    },
    "1969": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1971": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1976": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1981": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "SUB"
    },
    "1994": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "1"
    },
    "1995": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0x82B"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2001": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2010": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "1"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "ADD"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2090": {
      "op": "JUMP"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x836"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "1"
    },
    "2105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 27
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "1"
    },
    "2115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "1"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "1"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x871"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "1"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "SUB"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "1"
    },
    "2142": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x866"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "1"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "1"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2163": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A1"
    },
    "2166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2178": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "1"
    },
    "2179": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2181": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2182": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2183": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2184": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2186": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2190": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2191": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2195": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2197": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "1"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2206": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2208": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "1"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2218": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "1"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8BC"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x508"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "1"
    },
    "2246": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "1"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x924"
    },
    "2250": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2262": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2265": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "1"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "MSTORE"
    },
    "2277": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2330": {
      "op": "DUP3"
    },
    "2331": {
      "op": "ADD"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2339": {
      "op": "JUMP"
    },
    "2340": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 29
    },
    "2350": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "1"
    },
    "2351": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x986"
    },
    "2354": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2355": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2357": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2366": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2369": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2371": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2372": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "1"
    },
    "2373": {
      "op": "MSTORE"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "DUP3"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2437": {
      "op": "JUMP"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2439": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0x991"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x744"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2449": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 31
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "1"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2463": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2467": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2476": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2480": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9BA"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x110B"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2491": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2493": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 32
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "1"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2509": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2511": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E8"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10DF"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x0"
    },
    "2544": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2558": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "op": "SUB"
    },
    "2567": {
      "op": "NOT"
    },
    "2568": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "1"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "1"
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 34
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "1"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2594": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "1"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "1"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "1"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2633": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2634": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 35
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "op": "SUB"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "1"
    },
    "2644": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "1"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "1"
    },
    "2655": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2656": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAAB"
    },
    "2659": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2660": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2662": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2671": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2674": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2676": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2677": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "1"
    },
    "2678": {
      "op": "MSTORE"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2683": {
      "op": "DUP3"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "MSTORE"
    },
    "2686": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2730": {
      "op": "JUMP"
    },
    "2731": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 36
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "1"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "1"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2771": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2772": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2774": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2777": {
      "op": "NOT"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "1"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "1"
    },
    "2785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2786": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2788": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 37
    },
    "2789": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2790": {
      "op": "SWAP2"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "MSTORE"
    },
    "2793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "1"
    },
    "2834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2835": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2836": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "1"
    },
    "2837": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "1"
    },
    "2838": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "1"
    },
    "2839": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 38,
      "value": "0xB23"
    },
    "2844": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A9"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xB2F"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2859": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC49"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2863": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2864": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x656"
    },
    "2867": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2870": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2879": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2882": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "1"
    },
    "2883": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2886": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2887": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103C"
    },
    "2890": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2894": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6F"
    },
    "2898": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 40,
      "value": "0x40"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "7"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "7"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2926": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB99"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 41
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB83"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1189"
    },
    "2946": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 42,
      "value": "0xB92"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F7"
    },
    "2961": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "7"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB73"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "7"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB4"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB4"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11FA"
    },
    "2995": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "7"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "7"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "7"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "7"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "7"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBDE"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "7"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "7"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "7"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "7"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8A1"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 43,
      "value": "0xBF3"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x110B"
    },
    "3058": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 44,
      "value": "0xC00"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11A4"
    },
    "3071": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC0B"
    },
    "3076": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x30"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10DF"
    },
    "3082": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF8"
    },
    "3086": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "7"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "7"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC20"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC20"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11E4"
    },
    "3103": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3107": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "7"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "7"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "7"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "7"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3124": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "7"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3126": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "7"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 45,
      "value": "0xC42"
    },
    "3131": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3133": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F7"
    },
    "3137": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3138": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "7"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE2"
    },
    "3144": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "1"
    },
    "3158": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3159": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 46
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4B"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3167": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "1"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8D"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3198": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "1"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFEC"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "1"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCA7"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "1"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "1"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "1"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "1"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "1"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "1"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD7"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3253": {
      "op": "POP"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3266": {
      "op": "NOT"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "1"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "1"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD4"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "1"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5B"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD31"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD05"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "1"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "1"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "1"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "1"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "1"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "1"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0A"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "1"
    },
    "3338": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD29"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x40"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3355": {
      "op": "SHL"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "1"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "3364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103C"
    },
    "3368": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "1"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "op": "NOT"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "1",
      "statement": 48
    },
    "3388": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3395": {
      "op": "SHL"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "1"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A1"
    },
    "3402": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3403": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x1"
    },
    "3407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "1"
    },
    "3410": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "1"
    },
    "3411": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "1"
    },
    "3412": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "1"
    },
    "3413": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "DUP1"
    },
    "3416": {
      "op": "CALLDATALOAD"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3423": {
      "op": "SHL"
    },
    "3424": {
      "op": "SUB"
    },
    "3425": {
      "op": "DUP2"
    },
    "3426": {
      "op": "AND"
    },
    "3427": {
      "op": "DUP2"
    },
    "3428": {
      "op": "EQ"
    },
    "3429": {
      "op": "PUSH2",
      "value": "0xD6D"
    },
    "3432": {
      "op": "JUMPI"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "DUP1"
    },
    "3436": {
      "op": "REVERT"
    },
    "3437": {
      "op": "JUMPDEST"
    },
    "3438": {
      "op": "SWAP2"
    },
    "3439": {
      "op": "SWAP1"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "jump": "o",
      "op": "JUMP"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3447": {
      "op": "DUP3"
    },
    "3448": {
      "op": "DUP5"
    },
    "3449": {
      "op": "SUB"
    },
    "3450": {
      "op": "SLT"
    },
    "3451": {
      "op": "ISZERO"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3455": {
      "op": "JUMPI"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "DUP1"
    },
    "3459": {
      "op": "REVERT"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3464": {
      "op": "DUP3"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3468": {
      "jump": "i",
      "op": "JUMP"
    },
    "3469": {
      "op": "JUMPDEST"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "DUP1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3475": {
      "op": "DUP4"
    },
    "3476": {
      "op": "DUP6"
    },
    "3477": {
      "op": "SUB"
    },
    "3478": {
      "op": "SLT"
    },
    "3479": {
      "op": "ISZERO"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3483": {
      "op": "JUMPI"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3486": {
      "op": "DUP1"
    },
    "3487": {
      "op": "REVERT"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3492": {
      "op": "DUP4"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3496": {
      "jump": "i",
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "SWAP2"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xDB7"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3505": {
      "op": "DUP5"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3510": {
      "jump": "i",
      "op": "JUMP"
    },
    "3511": {
      "op": "JUMPDEST"
    },
    "3512": {
      "op": "SWAP1"
    },
    "3513": {
      "op": "POP"
    },
    "3514": {
      "op": "SWAP3"
    },
    "3515": {
      "op": "POP"
    },
    "3516": {
      "op": "SWAP3"
    },
    "3517": {
      "op": "SWAP1"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "jump": "o",
      "op": "JUMP"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3523": {
      "op": "DUP1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3528": {
      "op": "DUP5"
    },
    "3529": {
      "op": "DUP7"
    },
    "3530": {
      "op": "SUB"
    },
    "3531": {
      "op": "SLT"
    },
    "3532": {
      "op": "ISZERO"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0xDD5"
    },
    "3536": {
      "op": "JUMPI"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3539": {
      "op": "DUP1"
    },
    "3540": {
      "op": "REVERT"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3545": {
      "op": "DUP5"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3549": {
      "jump": "i",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "SWAP3"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3558": {
      "op": "DUP6"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3563": {
      "jump": "i",
      "op": "JUMP"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "SWAP2"
    },
    "3566": {
      "op": "POP"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3569": {
      "op": "DUP5"
    },
    "3570": {
      "op": "ADD"
    },
    "3571": {
      "op": "CALLDATALOAD"
    },
    "3572": {
      "op": "SWAP1"
    },
    "3573": {
      "op": "POP"
    },
    "3574": {
      "op": "SWAP3"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "SWAP3"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "SWAP3"
    },
    "3579": {
      "jump": "o",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "DUP1"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3586": {
      "op": "DUP1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3589": {
      "op": "DUP6"
    },
    "3590": {
      "op": "DUP8"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "op": "SLT"
    },
    "3593": {
      "op": "ISZERO"
    },
    "3594": {
      "op": "PUSH2",
      "value": "0xE12"
    },
    "3597": {
      "op": "JUMPI"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3600": {
      "op": "DUP1"
    },
    "3601": {
      "op": "REVERT"
    },
    "3602": {
      "op": "JUMPDEST"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3606": {
      "op": "DUP6"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3610": {
      "jump": "i",
      "op": "JUMP"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "SWAP4"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0xE29"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3619": {
      "op": "DUP7"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3624": {
      "jump": "i",
      "op": "JUMP"
    },
    "3625": {
      "op": "JUMPDEST"
    },
    "3626": {
      "op": "SWAP3"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3630": {
      "op": "DUP6"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "CALLDATALOAD"
    },
    "3633": {
      "op": "SWAP2"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3637": {
      "op": "DUP6"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "CALLDATALOAD"
    },
    "3640": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3649": {
      "op": "DUP1"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "GT"
    },
    "3652": {
      "op": "ISZERO"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE4D"
    },
    "3656": {
      "op": "JUMPI"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3659": {
      "op": "DUP1"
    },
    "3660": {
      "op": "REVERT"
    },
    "3661": {
      "op": "JUMPDEST"
    },
    "3662": {
      "op": "DUP2"
    },
    "3663": {
      "op": "DUP8"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "DUP8"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3670": {
      "op": "DUP4"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "SLT"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3676": {
      "op": "JUMPI"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3679": {
      "op": "DUP1"
    },
    "3680": {
      "op": "REVERT"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "DUP2"
    },
    "3683": {
      "op": "CALLDATALOAD"
    },
    "3684": {
      "op": "DUP2"
    },
    "3685": {
      "op": "DUP2"
    },
    "3686": {
      "op": "GT"
    },
    "3687": {
      "op": "ISZERO"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3691": {
      "op": "JUMPI"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3695": {
      "op": "PUSH2",
      "value": "0x11FA"
    },
    "3698": {
      "jump": "i",
      "op": "JUMP"
    },
    "3699": {
      "op": "JUMPDEST"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3702": {
      "op": "MLOAD"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3705": {
      "op": "DUP3"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3709": {
      "op": "NOT"
    },
    "3710": {
      "op": "SWAP1"
    },
    "3711": {
      "op": "DUP2"
    },
    "3712": {
      "op": "AND"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3715": {
      "op": "ADD"
    },
    "3716": {
      "op": "AND"
    },
    "3717": {
      "op": "DUP2"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "SWAP1"
    },
    "3720": {
      "op": "DUP4"
    },
    "3721": {
      "op": "DUP3"
    },
    "3722": {
      "op": "GT"
    },
    "3723": {
      "op": "DUP2"
    },
    "3724": {
      "op": "DUP4"
    },
    "3725": {
      "op": "LT"
    },
    "3726": {
      "op": "OR"
    },
    "3727": {
      "op": "ISZERO"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3735": {
      "op": "PUSH2",
      "value": "0x11FA"
    },
    "3738": {
      "jump": "i",
      "op": "JUMP"
    },
    "3739": {
      "op": "JUMPDEST"
    },
    "3740": {
      "op": "DUP2"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "DUP3"
    },
    "3745": {
      "op": "DUP2"
    },
    "3746": {
      "op": "MSTORE"
    },
    "3747": {
      "op": "DUP11"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3750": {
      "op": "DUP5"
    },
    "3751": {
      "op": "DUP8"
    },
    "3752": {
      "op": "ADD"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "GT"
    },
    "3755": {
      "op": "ISZERO"
    },
    "3756": {
      "op": "PUSH2",
      "value": "0xEB4"
    },
    "3759": {
      "op": "JUMPI"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3762": {
      "op": "DUP1"
    },
    "3763": {
      "op": "REVERT"
    },
    "3764": {
      "op": "JUMPDEST"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3768": {
      "op": "DUP7"
    },
    "3769": {
      "op": "ADD"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3772": {
      "op": "DUP4"
    },
    "3773": {
      "op": "ADD"
    },
    "3774": {
      "op": "CALLDATACOPY"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "DUP5"
    },
    "3780": {
      "op": "DUP4"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "op": "MSTORE"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "SWAP6"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "SWAP3"
    },
    "3793": {
      "op": "SWAP6"
    },
    "3794": {
      "op": "SWAP2"
    },
    "3795": {
      "op": "SWAP5"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "op": "SWAP3"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "jump": "o",
      "op": "JUMP"
    },
    "3800": {
      "op": "JUMPDEST"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3803": {
      "op": "DUP1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3806": {
      "op": "DUP4"
    },
    "3807": {
      "op": "DUP6"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "op": "SLT"
    },
    "3810": {
      "op": "ISZERO"
    },
    "3811": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3814": {
      "op": "JUMPI"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "op": "DUP1"
    },
    "3818": {
      "op": "REVERT"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xEF4"
    },
    "3823": {
      "op": "DUP4"
    },
    "3824": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3827": {
      "jump": "i",
      "op": "JUMP"
    },
    "3828": {
      "op": "JUMPDEST"
    },
    "3829": {
      "op": "SWAP2"
    },
    "3830": {
      "op": "POP"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3833": {
      "op": "DUP4"
    },
    "3834": {
      "op": "ADD"
    },
    "3835": {
      "op": "CALLDATALOAD"
    },
    "3836": {
      "op": "DUP1"
    },
    "3837": {
      "op": "ISZERO"
    },
    "3838": {
      "op": "ISZERO"
    },
    "3839": {
      "op": "DUP2"
    },
    "3840": {
      "op": "EQ"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "DUP1"
    },
    "3851": {
      "op": "SWAP2"
    },
    "3852": {
      "op": "POP"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "SWAP3"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "op": "SWAP3"
    },
    "3857": {
      "op": "SWAP1"
    },
    "3858": {
      "op": "POP"
    },
    "3859": {
      "jump": "o",
      "op": "JUMP"
    },
    "3860": {
      "op": "JUMPDEST"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3866": {
      "op": "DUP4"
    },
    "3867": {
      "op": "DUP6"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "op": "SLT"
    },
    "3870": {
      "op": "ISZERO"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0xF27"
    },
    "3874": {
      "op": "JUMPI"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3877": {
      "op": "DUP1"
    },
    "3878": {
      "op": "REVERT"
    },
    "3879": {
      "op": "JUMPDEST"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xF30"
    },
    "3883": {
      "op": "DUP4"
    },
    "3884": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3887": {
      "jump": "i",
      "op": "JUMP"
    },
    "3888": {
      "op": "JUMPDEST"
    },
    "3889": {
      "op": "SWAP5"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3892": {
      "op": "SWAP4"
    },
    "3893": {
      "op": "SWAP1"
    },
    "3894": {
      "op": "SWAP4"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "CALLDATALOAD"
    },
    "3897": {
      "op": "SWAP4"
    },
    "3898": {
      "op": "POP"
    },
    "3899": {
      "op": "POP"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "jump": "o",
      "op": "JUMP"
    },
    "3902": {
      "op": "JUMPDEST"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3907": {
      "op": "DUP3"
    },
    "3908": {
      "op": "DUP5"
    },
    "3909": {
      "op": "SUB"
    },
    "3910": {
      "op": "SLT"
    },
    "3911": {
      "op": "ISZERO"
    },
    "3912": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3915": {
      "op": "JUMPI"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3918": {
      "op": "DUP1"
    },
    "3919": {
      "op": "REVERT"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "CALLDATALOAD"
    },
    "3923": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "3930": {
      "jump": "i",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3936": {
      "op": "DUP3"
    },
    "3937": {
      "op": "DUP5"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "op": "SLT"
    },
    "3940": {
      "op": "ISZERO"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "3944": {
      "op": "JUMPI"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3947": {
      "op": "DUP1"
    },
    "3948": {
      "op": "REVERT"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "DUP2"
    },
    "3951": {
      "op": "MLOAD"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3955": {
      "op": "DUP2"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "3959": {
      "jump": "i",
      "op": "JUMP"
    },
    "3960": {
      "op": "JUMPDEST"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "DUP5"
    },
    "3967": {
      "op": "SUB"
    },
    "3968": {
      "op": "SLT"
    },
    "3969": {
      "op": "ISZERO"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xF8A"
    },
    "3973": {
      "op": "JUMPI"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3976": {
      "op": "DUP1"
    },
    "3977": {
      "op": "REVERT"
    },
    "3978": {
      "op": "JUMPDEST"
    },
    "3979": {
      "op": "POP"
    },
    "3980": {
      "op": "CALLDATALOAD"
    },
    "3981": {
      "op": "SWAP2"
    },
    "3982": {
      "op": "SWAP1"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "jump": "o",
      "op": "JUMP"
    },
    "3985": {
      "op": "JUMPDEST"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "MLOAD"
    },
    "3990": {
      "op": "DUP1"
    },
    "3991": {
      "op": "DUP5"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0xFA9"
    },
    "3996": {
      "op": "DUP2"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3999": {
      "op": "DUP7"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4003": {
      "op": "DUP7"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0x1122"
    },
    "4008": {
      "jump": "i",
      "op": "JUMP"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4015": {
      "op": "NOT"
    },
    "4016": {
      "op": "AND"
    },
    "4017": {
      "op": "SWAP3"
    },
    "4018": {
      "op": "SWAP1"
    },
    "4019": {
      "op": "SWAP3"
    },
    "4020": {
      "op": "ADD"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "SWAP3"
    },
    "4025": {
      "op": "SWAP2"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "jump": "o",
      "op": "JUMP"
    },
    "4029": {
      "op": "JUMPDEST"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "MLOAD"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFCF"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "DUP5"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4041": {
      "op": "DUP9"
    },
    "4042": {
      "op": "ADD"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0x1122"
    },
    "4046": {
      "jump": "i",
      "op": "JUMP"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "DUP4"
    },
    "4049": {
      "op": "MLOAD"
    },
    "4050": {
      "op": "SWAP1"
    },
    "4051": {
      "op": "DUP4"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "SWAP1"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4057": {
      "op": "DUP2"
    },
    "4058": {
      "op": "DUP4"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4061": {
      "op": "DUP9"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "PUSH2",
      "value": "0x1122"
    },
    "4066": {
      "jump": "i",
      "op": "JUMP"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "ADD"
    },
    "4069": {
      "op": "SWAP5"
    },
    "4070": {
      "op": "SWAP4"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "POP"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "jump": "o",
      "op": "JUMP"
    },
    "4076": {
      "op": "JUMPDEST"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "op": "SUB"
    },
    "4085": {
      "op": "DUP6"
    },
    "4086": {
      "op": "DUP2"
    },
    "4087": {
      "op": "AND"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "DUP5"
    },
    "4091": {
      "op": "AND"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4094": {
      "op": "DUP3"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "DUP4"
    },
    "4102": {
      "op": "SWAP1"
    },
    "4103": {
      "op": "MSTORE"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4108": {
      "op": "DUP3"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "DUP2"
    },
    "4111": {
      "op": "SWAP1"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "PUSH2",
      "value": "0x101F"
    },
    "4119": {
      "op": "SWAP1"
    },
    "4120": {
      "op": "DUP4"
    },
    "4121": {
      "op": "ADD"
    },
    "4122": {
      "op": "DUP5"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4126": {
      "jump": "i",
      "op": "JUMP"
    },
    "4127": {
      "op": "JUMPDEST"
    },
    "4128": {
      "op": "SWAP7"
    },
    "4129": {
      "op": "SWAP6"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "op": "POP"
    },
    "4135": {
      "op": "POP"
    },
    "4136": {
      "jump": "o",
      "op": "JUMP"
    },
    "4137": {
      "op": "JUMPDEST"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "DUP2"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4149": {
      "op": "DUP4"
    },
    "4150": {
      "op": "ADD"
    },
    "4151": {
      "op": "DUP5"
    },
    "4152": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "4155": {
      "jump": "i",
      "op": "JUMP"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "op": "DUP1"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "MSTORE"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4164": {
      "op": "SWAP1"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4203": {
      "op": "DUP3"
    },
    "4204": {
      "op": "ADD"
    },
    "4205": {
      "op": "MSTORE"
    },
    "4206": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "op": "SWAP1"
    },
    "4237": {
      "jump": "o",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4241": {
      "op": "DUP1"
    },
    "4242": {
      "op": "DUP3"
    },
    "4243": {
      "op": "MSTORE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4246": {
      "op": "SWAP1"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "op": "MSTORE"
    },
    "4288": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4308": {
      "op": "SHL"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "SWAP1"
    },
    "4318": {
      "jump": "o",
      "op": "JUMP"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4322": {
      "op": "DUP3"
    },
    "4323": {
      "op": "NOT"
    },
    "4324": {
      "op": "DUP3"
    },
    "4325": {
      "op": "GT"
    },
    "4326": {
      "op": "ISZERO"
    },
    "4327": {
      "op": "PUSH2",
      "value": "0x10F2"
    },
    "4330": {
      "op": "JUMPI"
    },
    "4331": {
      "op": "PUSH2",
      "value": "0x10F2"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4337": {
      "jump": "i",
      "op": "JUMP"
    },
    "4338": {
      "op": "JUMPDEST"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "SWAP1"
    },
    "4342": {
      "jump": "o",
      "op": "JUMP"
    },
    "4343": {
      "op": "JUMPDEST"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4346": {
      "op": "DUP3"
    },
    "4347": {
      "op": "PUSH2",
      "value": "0x1106"
    },
    "4350": {
      "op": "JUMPI"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0x1106"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4357": {
      "jump": "i",
      "op": "JUMP"
    },
    "4358": {
      "op": "JUMPDEST"
    },
    "4359": {
      "op": "POP"
    },
    "4360": {
      "op": "DIV"
    },
    "4361": {
      "op": "SWAP1"
    },
    "4362": {
      "jump": "o",
      "op": "JUMP"
    },
    "4363": {
      "op": "JUMPDEST"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "DUP3"
    },
    "4368": {
      "op": "LT"
    },
    "4369": {
      "op": "ISZERO"
    },
    "4370": {
      "op": "PUSH2",
      "value": "0x111D"
    },
    "4373": {
      "op": "JUMPI"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x111D"
    },
    "4377": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4380": {
      "jump": "i",
      "op": "JUMP"
    },
    "4381": {
      "op": "JUMPDEST"
    },
    "4382": {
      "op": "POP"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "op": "SWAP1"
    },
    "4385": {
      "jump": "o",
      "op": "JUMP"
    },
    "4386": {
      "op": "JUMPDEST"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4389": {
      "op": "JUMPDEST"
    },
    "4390": {
      "op": "DUP4"
    },
    "4391": {
      "op": "DUP2"
    },
    "4392": {
      "op": "LT"
    },
    "4393": {
      "op": "ISZERO"
    },
    "4394": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4397": {
      "op": "JUMPI"
    },
    "4398": {
      "op": "DUP2"
    },
    "4399": {
      "op": "DUP2"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "MLOAD"
    },
    "4402": {
      "op": "DUP4"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x1125"
    },
    "4412": {
      "op": "JUMP"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "DUP4"
    },
    "4415": {
      "op": "DUP2"
    },
    "4416": {
      "op": "GT"
    },
    "4417": {
      "op": "ISZERO"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "4421": {
      "op": "JUMPI"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "SWAP2"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "MSTORE"
    },
    "4429": {
      "jump": "o",
      "op": "JUMP"
    },
    "4430": {
      "op": "JUMPDEST"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "DUP2"
    },
    "4434": {
      "op": "DUP2"
    },
    "4435": {
      "op": "SHR"
    },
    "4436": {
      "op": "SWAP1"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "AND"
    },
    "4439": {
      "op": "DUP1"
    },
    "4440": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4443": {
      "op": "JUMPI"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "AND"
    },
    "4448": {
      "op": "SWAP2"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4453": {
      "op": "DUP3"
    },
    "4454": {
      "op": "LT"
    },
    "4455": {
      "op": "DUP2"
    },
    "4456": {
      "op": "EQ"
    },
    "4457": {
      "op": "ISZERO"
    },
    "4458": {
      "op": "PUSH2",
      "value": "0x1183"
    },
    "4461": {
      "op": "JUMPI"
    },
    "4462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4477": {
      "op": "MSTORE"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "REVERT"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "SWAP2"
    },
    "4486": {
      "op": "SWAP1"
    },
    "4487": {
      "op": "POP"
    },
    "4488": {
      "jump": "o",
      "op": "JUMP"
    },
    "4489": {
      "op": "JUMPDEST"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4494": {
      "op": "NOT"
    },
    "4495": {
      "op": "DUP3"
    },
    "4496": {
      "op": "EQ"
    },
    "4497": {
      "op": "ISZERO"
    },
    "4498": {
      "op": "PUSH2",
      "value": "0x119D"
    },
    "4501": {
      "op": "JUMPI"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x119D"
    },
    "4505": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4508": {
      "jump": "i",
      "op": "JUMP"
    },
    "4509": {
      "op": "JUMPDEST"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "SWAP1"
    },
    "4515": {
      "jump": "o",
      "op": "JUMP"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4523": {
      "op": "JUMPI"
    },
    "4524": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4530": {
      "jump": "i",
      "op": "JUMP"
    },
    "4531": {
      "op": "JUMPDEST"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "op": "MOD"
    },
    "4534": {
      "op": "SWAP1"
    },
    "4535": {
      "jump": "o",
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4544": {
      "op": "SHL"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "REVERT"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4574": {
      "op": "MSTORE"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "REVERT"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4591": {
      "op": "MSTORE"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4596": {
      "op": "MSTORE"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4601": {
      "op": "REVERT"
    },
    "4602": {
      "op": "JUMPDEST"
    },
    "4603": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4610": {
      "op": "SHL"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4613": {
      "op": "MSTORE"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "op": "NOT"
    },
    "4634": {
      "op": "DUP2"
    },
    "4635": {
      "op": "AND"
    },
    "4636": {
      "op": "DUP2"
    },
    "4637": {
      "op": "EQ"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x1226"
    },
    "4641": {
      "op": "JUMPI"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "op": "REVERT"
    },
    "4646": {
      "op": "JUMPDEST"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "595c55d352363480f88cd41b437b5386b0f25892",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "613:13006:1:-:0;;;1375:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:1;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;613:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;613:13006:1;;;-1:-1:-1;613:13006:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:11;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:11;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:11;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:11:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:11;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;613:13006:1;;;;;;",
  "sourcePath": "C:/Users/massi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}